#!/usr/bin/env python
import os, sys
import ROOT
import numpy as np
ROOT.PyConfig.IgnoreCommandLineOptions = True
from importlib import import_module
from PhysicsTools.NanoAODTools.postprocessing.framework.postprocessor import PostProcessor
from PhysicsTools.NanoAODTools.postprocessing.framework.crabhelper import inputFiles,runsAndLumis

from PhysicsTools.NanoAODTools.postprocessing.framework.datamodel import Collection
from PhysicsTools.NanoAODTools.postprocessing.framework.eventloop import Module

class EfficiencyModule(Module):
    def __init__(self,datayear,jetSelection):
        self.jetSel = jetSelection
	self.writeHistFile=True
	self.datayear = datayear

    def beginJob(self,histFile=None,histDirName=None):
	Module.beginJob(self,histFile,histDirName)
    def analyze(self, event):
	Genparts = Collection(event, "GenPart")
	for genpart in Genparts:
	    if(abs(genpart.pdgId)==5):# and abs(genpart.genPartIdxMother)==21):
		#if(abs(genpart.genPartIdxMother)==6 or abs(genpart.genPartIdxMother)==9 or abs(genpart.genPartIdxMother)==21):
		    print("self id = ", genpart.pdgId)	
		    print("mother id = ", genpart.genPartIdxMother)
	            #print("status = ", genpart.status," ", genpart.statusFlags)
		    
		
	print("-------------------------")			
        return True

EfficiencyConstr_2016 = lambda : EfficiencyModule('2016',jetSelection= lambda j : j.pt > 20)
EfficiencyConstr_2017 = lambda : EfficiencyModule('2017',jetSelection= lambda j : j.pt > 20)

treecut=" Entry$<10 "
inputFiles=["/grid_mnt/t3storage3/mikumar/Run2/SIXTEEN/minitree/Mc/2J1T1/final/Minitree_Tchannel_2J1T1_mu.root"]

p=PostProcessor( ".",
                inputFiles,
                treecut,
                modules=[EfficiencyConstr_2017()],
                outputbranchsel="clean.txt",
                provenance=True,
                fwkJobReport=True,
                jsonInput=runsAndLumis(),
                noOut=False,
                histFileName="B_DeepCSV_Efficiency.root",
                histDirName="Efficiency")
p.run()

print "DONE"
